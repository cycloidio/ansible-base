---
- name: Setup global hosts
  lineinfile: dest=/etc/hosts
              line="{{item}}"
              state=present
              owner=root 
              group=root 
              mode=0644
  with_items: global_hosts
  when: global_hosts is defined

- name: "Setup hostname"
  hostname: name="{{ec2_tag_Name}}"
  when: ec2_tag_Name is defined and ec2_tag_asg is not defined

- name: "Setup hostname in auto-scaling-group"
  hostname: name="{{ec2_tag_Name}}-{{ ec2_instance_id }}"
  when: ec2_tag_Name is defined and ec2_tag_asg is defined

- name: "Set facts with hostname"
  set_fact: ansible_hostname="{{ec2_tag_Name}}"
  when: ec2_tag_Name is defined and ec2_tag_asg is not defined

- name: "Set facts with hostname in auto-scaling-group"
  set_fact: ansible_hostname="{{ec2_tag_Name}}-{{ ec2_instance_id }}"
  when: ec2_tag_Name is defined and ec2_tag_asg is defined

- name: "Setup AWS Hosts"
  lineinfile: dest=/etc/hosts
              regexp='^{{ item }}.*'
              line="{{ item }}
                {{hostvars[item].ec2_tag_Name}}
                {{custom_hosts[hostvars[item].ec2_tag_Name]|default([])|join(' ')}}"
              state=present
  with_items: play_hosts
  when: ec2_tag_Name is defined and ec2_tag_asg is not defined

- name: "Setup AWS Hosts in auto-scaling-group"
  lineinfile: dest=/etc/hosts
              regexp='^{{ item }}.*'
              line="{{ item }}
                {{hostvars[item].ec2_tag_Name}}-{{hostvars[item].ec2_instance_id}}
                {{custom_hosts[hostvars[item].ec2_tag_Name]|default([])|join(' ')}}"
              state=present
  with_items: play_hosts
  when: ec2_tag_Name is defined and ec2_tag_asg is defined

- pip: name=boto state=latest

- name: "Register instance private DNS"
  route53:
    command: "create"
    zone: "{{ r53_internal_zone }}"
    record: "{{ ec2_tag_Name }}.{{ r53_internal_zone }}"
    type: "A"
    ttl: "7200"
    value: "{{ ansible_eth0.ipv4.address }}"
    private_zone: true
    overwrite: true
  when: r53_internal_zone is defined and ec2_tag_Name is defined and ec2_tag_asg is not defined

  ignore_errors: yes

- name: "Register instance private DNS in auto-scaling-group"
  route53:
    command: "create"
    zone: "{{ r53_internal_zone }}"
    record: "{{ ec2_tag_Name }}-{{ ec2_instance_id }}.{{ r53_internal_zone }}"
    type: "A"
    ttl: "7200"
    value: "{{ ansible_eth0.ipv4.address }}"
    private_zone: true
    overwrite: true
  when: r53_internal_zone is defined and ec2_tag_Name is defined and ec2_tag_asg is defined
  ignore_errors: yes
